---
const {img, title, url} = Astro.props
---
<project-card class="hide center_card z-20 mx-4 md:mx-52 md:my-10 lg:my-0 lg:mx-40" data-newtab_url={url}>
<div class='flex items-center justify-evenly flex-col'>
<img src={img} class='basis-1/2 w-80 p-4' alt={`photo of ${title}`}/>
<h2 class="basis-1/4 flex items-center">{title}</h2>
</div>
</project-card>


<style>
  project-card{
    transform: rotateX(5deg) rotateY(15deg);
    transition: all 0.6s ease;
  }
    div{
    --cardShadow: 0 4px 30px rgba(47, 4, 71, 0.4)
		background: rgba(255, 255, 255, 0);
		border-radius: 16px;
		box-shadow: var(--cardShadow);
		backdrop-filter: blur(5px);
		-webkit-backdrop-filter: blur(5px);
		border: 2px solid rgba(255, 255, 255, 0.1);
    height: 50vh;
	}
  :root[data-theme='light'] div{
    --cardShadow:0 4px 20px rgba(18, 18, 18, 0.4)
  }
    .slideInWithRotation {
        animation: slide-in-bottom 0.8s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
    }
    project-card:hover{
        cursor: pointer;
        transform: rotateX(0deg) rotateY(0deg);
    }
    @keyframes backToNormalHover{
      0%{
        opacity: 1;
        transform: rotateX(5deg) rotateY(15deg);
      }
      100%{
        opacity: 1;
        transform: rotateX(0deg) rotateY(0deg);
      }
    }
    .hide{
        opacity: 0;
    }
    img{
      border-radius: 10%;
    }

    @keyframes slide-in-bottom {
  0% {
    -webkit-transform: translateY(30vh);
            transform: translateY(30vh);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0) rotateX(5deg) rotateY(15deg);
    opacity: 1;
  }
}
</style>

<script>
  class ProjectCard extends HTMLElement {
    constructor() {
      super();

        this.addEventListener('click', () => {
          window.open(this.dataset.newtab_url, '_blank')
        })
    }
  }

  customElements.define('project-card', ProjectCard);
</script>